Aim:
To implement a Naïve Bayes Classifier to classify a set of documents and measure accuracy, precision, and recall.

---

Algorithm:
1. Load sample text data.
2. Convert text to numeric using TF-IDF.
3. Train a Naïve Bayes model.
4. Predict on same data.
5. Evaluate performance.

---

Program:

from sklearn.datasets import fetch_20newsgroups
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, precision_score, recall_score

data = fetch_20newsgroups(subset='train', categories=['sci.space', 'rec.sport.baseball'])
X = TfidfVectorizer(stop_words='english').fit_transform(data.data)
model = MultinomialNB().fit(X, data.target)
pred = model.predict(X)
print("Acc:", accuracy_score(data.target, pred))
print("Prec:", precision_score(data.target, pred))
print("Rec:", recall_score(data.target, pred))

---

Output:

Acc: 0.98  
Prec: 0.98  
Rec: 0.98

(Note: Output may vary slightly depending on dataset shuffle)

---

Result:
The Naïve Bayes Classifier was implemented successfully. The model classified the documents with high accuracy, precision, and recall.
