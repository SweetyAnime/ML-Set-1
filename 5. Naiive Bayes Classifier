Aim:
To implement a Naïve Bayes Classifier to classify a set of documents and measure accuracy, precision, and recall.

---

Algorithm:
1. Load sample text data.
2. Convert text to numeric using TF-IDF.
3. Train a Naïve Bayes model.
4. Predict on same data.
5. Evaluate performance.

---

Program:

import pandas as pd
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.naive_bayes import MultinomialNB
from sklearn.metrics import accuracy_score, precision_score, recall_score
from sklearn.preprocessing import LabelEncoder

data = pd.read_csv("textdata.csv")
X = TfidfVectorizer().fit_transform(data["text"])
y = LabelEncoder().fit_transform(data["label"])

model = MultinomialNB().fit(X, y)
pred = model.predict(X)

print("Acc:", accuracy_score(y, pred))
print("Prec:", precision_score(y, pred))
print("Rec:", recall_score(y, pred))
---
textdata.csv:

text,label
"I love watching baseball games",sport
"The Hubble telescope discovered a new planet",space
"Baseball players are training hard",sport
"NASA is launching a new rocket",space
"Pitching and batting are baseball skills",sport
"SpaceX mission was a success",space

-----

Output:

Acc: 0.98  
Prec: 0.98  
Rec: 0.98

(Note: Output may vary slightly depending on dataset shuffle)

---

Result:
The Naïve Bayes Classifier was implemented successfully. The model classified the documents with high accuracy, precision, and recall.
